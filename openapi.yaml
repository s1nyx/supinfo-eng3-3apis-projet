openapi: 3.0.0
info:
  title: Train Station API
  version: 1.0.0
  description: API for managing train stations, trains, tickets, and users.

servers:
  - url: http://localhost:3000
    description: Local server

paths:
  /auth/signup:
    post:
      tags:
        - Auth
      summary: Create a new user account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                username:
                  type: string
                password:
                  type: string
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: Bad request

  /auth/signin:
    post:
      tags:
        - Auth
      summary: Authenticate a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          description: Unauthorized

  /auth/signout:
    post:
      tags:
        - Auth
      summary: Sign out the current user
      responses:
        '200':
          description: Successful logout
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '500':
          description: Internal server error

  /users:
    post:
      tags:
        - Users
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: User created successfully

  /users/{id}:
    get:
      tags:
        - Users
      summary: Get user by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found

    patch:
      tags:
        - Users
      summary: Update a user
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User updated successfully
        '404':
          description: User not found

    delete:
      tags:
        - Users
      summary: Delete a user
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User deleted successfully
        '404':
          description: User not found

  # Trains
  /trains:
    post:
      tags:
        - Trains
      summary: Create a new train
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Train'
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Train created successfully

    get:
      tags:
        - Trains
      summary: Get a list of all trains
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of trains
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Train'

  /trains/{id}:
    get:
      tags:
        - Trains
      summary: Get train by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Train retrieved successfully
        '404':
          description: Train not found

    patch:
      tags:
        - Trains
      summary: Update a train
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Train'
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Train updated successfully
        '404':
          description: Train not found

    delete:
      tags:
        - Trains
      summary: Delete a train
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Train deleted successfully
        '404':
          description: Train not found

# ... (Previous content)

  # Tickets
  /tickets:
    post:
      tags:
        - Tickets
      summary: Book a ticket
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ticket'
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Ticket booked successfully

    get:
      tags:
        - Tickets
      summary: Get a list of all tickets
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of tickets
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Ticket'

  /tickets/{id}:
    put:
      tags:
        - Tickets
      summary: Validate a ticket
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Ticket validated successfully
        '404':
          description: Ticket not found

  # Train Stations
  /trainstations:
    post:
      tags:
        - Train stations
      summary: Create a new train station
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrainStation'
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Train station created successfully

    get:
      tags:
        - Train stations
      summary: Get a list of all train stations
      responses:
        '200':
          description: List of train stations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TrainStation'

  /trainstations/{id}:
    get:
      tags:
        - Train stations
      summary: Get train station by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Train station retrieved successfully
        '404':
          description: Train station not found

    patch:
      tags:
        - Train stations
      summary: Update a train station
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrainStation'
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Train station updated successfully
        '404':
          description: Train station not found

    delete:
      tags:
        - Train stations
      summary: Delete a train station
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Train station deleted successfully
        '404':
          description: Train station not found

    
components:
  schemas:
    User:
      type: object
      properties:
        email:
          type: string
          format: email
        username:
          type: string
        role:
          type: string
        password:
          type: string
    Train:
      type: object
      properties:
        name:
          type: string
        start_station:
          type: string
        end_station:
          type: string
        time_of_departure:
          type: string
    Ticket:
        type: object
        properties:
          username:
            type: string
          start_station:
            type: string
          end_station:
            type: string
          valid:
            type: boolean
    TrainStation:
      type: object
      properties:
        name:
          type: string
        open_hour:
          type: string
        close_hour:
          type: string
        image:
          type: string

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
